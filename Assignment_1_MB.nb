(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    381107,       8264]
NotebookOptionsPosition[    376247,       8192]
NotebookOutlinePosition[    376723,       8210]
CellTagsIndexPosition[    376680,       8207]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Data Science and Machine Learning", "Title",ExpressionUUID->"e243a98d-be8f-4892-8900-9d01b72390b7"],

Cell["Assignment 1: Manipulating, cleaning, visualizing data", "Subtitle",ExpressionUUID->"947f15c3-600c-4c56-8557-0329ea06c7f9"],

Cell[TextData[{
 "In",
 " ",
 "this",
 " ",
 "assignment",
 ",",
 " ",
 "we",
 " ",
 "will",
 " ",
 "use",
 " ",
 "a",
 " ",
 "dataset",
 " ",
 "to",
 " ",
 "perform",
 " ",
 "cleaning",
 " ",
 "and",
 " ",
 "visualization",
 " ",
 "operations",
 ".",
 "\n",
 "We",
 " ",
 "will",
 " ",
 "first",
 " ",
 "use",
 " ",
 "clean",
 " ",
 "data",
 " ",
 "from",
 " ",
 "company",
 " ",
 "entities",
 ".",
 "\n",
 "Then",
 ",",
 " ",
 "we",
 " ",
 "will",
 " ",
 "use",
 " ",
 "a",
 " ",
 "dataset",
 " ",
 "about",
 " ",
 "the",
 " ",
 "performance",
 " ",
 "of",
 " ",
 "several",
 " ",
 "companies",
 " ",
 "across",
 " ",
 "different",
 " ",
 "years",
 ".",
 " ",
 "The",
 " ",
 "performance",
 " ",
 "is",
 " ",
 "shown",
 " ",
 "in",
 " ",
 "terms",
 " ",
 "of",
 " ",
 "different",
 " ",
 "social",
 ",",
 " ",
 "environmental",
 ",",
 " ",
 "and",
 " ",
 "governance",
 " ",
 "scores",
 ".",
 " ",
 "For",
 " ",
 "each",
 " ",
 "company",
 ",",
 " ",
 "the",
 " ",
 "dataset",
 " ",
 "also",
 " ",
 "contains",
 " ",
 "a",
 " ",
 "set",
 " ",
 "of",
 " ",
 "features",
 ",",
 " ",
 "e",
 ".",
 "g",
 ",",
 " ",
 "market",
 " ",
 "value",
 ",",
 " ",
 "assets",
 ",",
 " ",
 "etc",
 ".",
 "\n",
 "Once",
 " ",
 "you",
 " ",
 "are",
 " ",
 "done",
 " ",
 "you",
 " ",
 "have",
 " ",
 "to",
 ":",
 "\n",
 " ",
 " ",
 " ",
 " ",
 " ",
 " ",
 " ",
 "1",
 ".",
 " ",
 "Submit",
 " ",
 "your",
 " ",
 "notebook",
 " ",
 "here",
 ":",
 " ",
 ButtonBox["https://moodle.epfl.ch/mod/assign/view.php?id=1159929",
  BaseStyle->"HyperlinkActionNew",
  ButtonData->{
    URL["https://moodle.epfl.ch/mod/assign/view.php?id=1159929"], None},
  ButtonNote->"https://moodle.epfl.ch/mod/assign/view.php?id=1159929"],
 "\n",
 " ",
 " ",
 " ",
 " ",
 " ",
 " ",
 " ",
 "2",
 ".",
 " ",
 "Answer",
 " ",
 "the",
 " ",
 "questions",
 " ",
 "to",
 " ",
 "the",
 " ",
 "quiz",
 ":",
 " ",
 ButtonBox["https://moodle.epfl.ch/mod/quiz/view.php?id=1171854",
  BaseStyle->"HyperlinkActionNew",
  ButtonData->{
    URL["https://moodle.epfl.ch/mod/quiz/view.php?id=1171854"], None},
  ButtonNote->"https://moodle.epfl.ch/mod/quiz/view.php?id=1171854"],
 "\n",
 "You",
 " ",
 "have",
 " ",
 "to",
 " ",
 "do",
 " ",
 "both",
 ".",
 " ",
 "The",
 " ",
 "answers",
 " ",
 "to",
 " ",
 "the",
 " ",
 "quiz",
 " ",
 "should",
 " ",
 "be",
 " ",
 "supported",
 " ",
 "by",
 " ",
 "your",
 " ",
 "code",
 ".",
 " ",
 "If",
 " ",
 "they",
 " ",
 "are",
 " ",
 "not",
 " ",
 "you",
 " ",
 "will",
 " ",
 "not",
 " ",
 "receive",
 " ",
 "the",
 " ",
 "point",
 " ",
 "for",
 " ",
 "it",
 ".",
 " ",
 "\n",
 "If",
 " ",
 "there",
 " ",
 "is",
 " ",
 "need",
 " ",
 "for",
 " ",
 "further",
 " ",
 "clarifications",
 " ",
 "on",
 " ",
 "the",
 " ",
 "questions",
 ",",
 " ",
 "after",
 " ",
 "the",
 " ",
 "assignment",
 " ",
 "is",
 " ",
 "released",
 ",",
 " ",
 "we",
 " ",
 "will",
 " ",
 "update",
 " ",
 "this",
 " ",
 "file",
 ",",
 " ",
 "so",
 " ",
 "make",
 " ",
 "sure",
 " ",
 "you",
 " ",
 "check",
 " ",
 "the",
 " ",
 "git",
 " ",
 StyleBox["repository",
  IgnoreSpellCheck->True],
 " ",
 "for",
 " ",
 "updates",
 ".",
 "\n",
 "\t",
 "Good",
 " ",
 "luck",
 "!"
}], "Text",ExpressionUUID->"eeb8073e-ee93-4cc1-b8ff-1f3a5a596e0a"],

Cell[CellGroupData[{

Cell["Warm-Up (..the clean data...)", "Section",ExpressionUUID->"949d99f6-bd54-4947-9317-7b9e2f8bd129"],

Cell["\<\
For the companies: {\"Zoom Video \
Communications\",\"Apple\",\"Biogen\",\"Amazon\",\"Adobe\",\"Invesco \
Ltd\",\"Facebook\",\"Microsoft\"}, create a data structure containing their \
\"CurrentAssets\".


\[LineSeparator]

Your structure should be an association with keys being company entities.\
\>", "Text",
 CellFrame->2,
 CellChangeTimes->{{3.843383902300214*^9, 3.8433839192064915`*^9}, 
   3.8433844010871353`*^9},
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"7c240ddf-ef6b-45b8-9492-800a7e5124ee"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.843384412374837*^9, 
  3.843384412783208*^9}},ExpressionUUID->"2148a40a-dd5f-4131-8db8-\
77dd1fbfecad"],

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = 
   "companies_assets = {EntityValue[Apple]}", Typeset`boxes$$ = "None", 
   Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
   Typeset`open$$ = {1}, Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
    1.70289`7.682731588648278, "query.jsp" -> 4.3283`8.08786234814283, 
    "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{195.79999999999998`, {8., 11.8}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{3.8433844220150223`*^9, 
  3.843384511248374*^9},ExpressionUUID->"458e6f2a-f40c-410b-8991-\
ff6a797f42d4"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 "\n",
 "What",
 " ",
 "are",
 " ",
 "the",
 " ",
 "current",
 " ",
 "assets",
 " ",
 "of",
 " ",
 "Zoom",
 " ",
 "Video",
 " ",
 "Communications",
 "? ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 "]\n",
 "Give your answer in billion $, rounded at two-digit precision (e.g., 1.23)"
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"b61b6ee1-fed0-47f2-94af-1dea1409a87e"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "apple", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    InputAssumptions -> {"{\"C\", \"apple\"} -> {\"Company\"}"}, 
    Method -> {
     "ExtrusionChosen" -> {
       "CompanyInformation:CompanyData", "Company information", 1, 1, "Input",
         "Dataset[EntityValue[Entity[\"Company\", \"Apple::5zkjq\"], \
{EntityProperty[\"Company\", \"Name\"], EntityProperty[\"Company\", \
\"Status\"], EntityProperty[\"Company\", \"Position\"], \
EntityProperty[\"Company\", \"CommonShares\"], EntityProperty[\"Company\", \
\"Website\"]}, \"PropertyAssociation\"]]"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Company\", \"Apple::5zkjq\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"Apple\"", 
                Global`TagBoxWrapper[
                "Entity" -> {CompanyData, "Apple::5zkjq"}]], Identity], 
              TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Company information", "scanner" -> "Data", "id" -> 
     "CompanyInformation:CompanyData", "position" -> "200", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CompanyData"}], "\n    ", 
         XMLElement["microsource", {}, {"FinancialData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Company\", \"Apple::5zkjq\"], \
{EntityProperty[\"Company\", \"Name\"], EntityProperty[\"Company\", \
\"Status\"], EntityProperty[\"Company\", \"Position\"], \
EntityProperty[\"Company\", \"CommonShares\"], EntityProperty[\"Company\", \
\"Website\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"name\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                 "\"Apple\"", {
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"company type\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 "\"publicly traded corporation\""}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"status\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 FormBox[
                  TagBox[
                   TagBox["\"active\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {"CompanyStatus", "Active"}]], Identity], 
                  TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"location\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 FormBox[
                  TemplateBox[{",", "\",\"", 
                    TagBox[
                    TagBox["\"Cupertino\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {
                    CityData, {"Cupertino", "California", "UnitedStates"}}]], 
                    Identity], 
                    TagBox[
                    TagBox["\"California\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {Global`USStateData, "California"}]], 
                    Identity], 
                    TagBox[
                    TagBox["\"United States\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {CountryData, "UnitedStates"}]], Identity]}, 
                   "RowWithSeparators"], TraditionalForm]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"common shares\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    TagBox[
                    TagBox["\"NASDAQ:AAPL\"", 
                    Global`TagBoxWrapper["Entity" -> {FinancialData, 
                    Entity[
                    "Financial", "NASDAQ:AAPL", {}, "Preformat" -> 
                    Global`CalculateText[
                    Global`PopupLink[
                    Global`TaggedForm[
                    "Apple", "Entity" -> {FinancialData, "NASDAQ:AAPL"}], 
                    "NASDAQ:AAPL", "Financial" -> "NASDAQ:AAPL"]]]}]], 
                    Identity], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TagBox[
                    TagBox["\"DE:APC\"", 
                    Global`TagBoxWrapper["Entity" -> {FinancialData, 
                    Entity[
                    "Financial", "DE:APC", {}, "Preformat" -> 
                    Global`CalculateText[
                    Global`PopupLink[
                    Global`TaggedForm[
                    "Apple Inc", "Entity" -> {FinancialData, "DE:APC"}], 
                    "DE:APC", "Financial" -> "DE:APC"]]]}]], Identity], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    TagBox[
                    TagBox["\"F:APC\"", 
                    Global`TagBoxWrapper["Entity" -> {FinancialData, 
                    Entity[
                    "Financial", "F:APC", {}, "Preformat" -> 
                    Global`CalculateText[
                    Global`PopupLink[
                    Global`TaggedForm[
                    "Apple", "Entity" -> {FinancialData, "F:APC"}], "F:APC", 
                    "Financial" -> "F:APC"]]]}]], Identity]}], 
                  LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                  0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"website\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  Global`TagBoxWrapper["Label"]], 
                 TagBox[
                 "\"www.apple.com\"", 
                  Annotation[#, {
                   "URL" -> "https://www.apple.com", "Popup" -> None, 
                    "OneClick" -> False}, "ExternalLink"]& ]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Fundamentals and financials", "scanner" -> "Data", 
     "id" -> "CompanyFundamentals:CompanyData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CompanyData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Morningstar"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"revenue\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["347.2", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "347.2", "SRString" -> "347.2"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily -> "Helvetica", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000000& , AutoDelete -> True]}], "\[NoBreak]", 
                    StyleBox[
                    
                    RowBox[{"\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]",
                     "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"gross profit\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["142.4", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "142.4", "SRString" -> "142.4"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily -> "Helvetica", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000000& , AutoDelete -> True]}], "\[NoBreak]", 
                    StyleBox[
                    
                    RowBox[{"\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]",
                     "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"net income\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{"\"$\"", "\[InvisibleSpace]", "\[InvisibleSpace]", 
                    RowBox[{
                    TagBox["86.8", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "86.8", "SRString" -> "86.8"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily -> "Helvetica", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000000& , AutoDelete -> True]}], "\[NoBreak]", 
                    StyleBox[
                    
                    RowBox[{"\[InvisibleSpace]", "\" \"", "\[InvisibleSpace]",
                     "\"per year\""}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"employees\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["147000", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"return on assets\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["6.52", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "6.52", "SRString" -> "6.52"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"return on equity\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"+", 
                    TagBox["32.59", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "32.59", "SRString" -> "32.59"]]}], 
                    "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Helvetica", FontSize -> 
                    Smaller]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"leverage\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["5.131", 
                    Global`TagBoxWrapper[
                    "StringBoxes" -> "5.131", "SRString" -> "5.131"]]}], 
                    Identity, TagBoxNote -> {"Hyperlink" -> "5.131"}], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], Identity]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, {Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"based on trailing 12-month totals and annual employees\
\"", "\[NoBreak]", "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  Global`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "8", "value" -> "Fundamentals", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Fundamentals", "input" -> 
           "CompanyFundamentals:CompanyData__Fundamentals"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Ratios", "input" -> 
           "CompanyFundamentals:CompanyData__Ratios"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Balance sheet (annual)", "input" -> 
           "CompanyFundamentals:CompanyData__Balance sheet (annual)"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Balance sheet (quarterly)", "input" -> 
           "CompanyFundamentals:CompanyData__Balance sheet (quarterly)"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Income statement (TTM)", "input" -> 
           "CompanyFundamentals:CompanyData__Income statement (TTM)"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Income statement (quarterly)", "input" -> 
           "CompanyFundamentals:CompanyData__Income statement (quarterly)"}, \
{}], 
         XMLElement[
         "state", {
          "name" -> "Cash flow statement (TTM)", "input" -> 
           "CompanyFundamentals:CompanyData__Cash flow statement (TTM)"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Cash flow statement (quarterly)", "input" -> 
           "CompanyFundamentals:CompanyData__Cash flow statement \
(quarterly)"}, {}]}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Latest trade", "scanner" -> "Data", "id" -> 
     "LatestTrade:CompanyData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CompanyData"}], "\n   ", 
         XMLElement["microsource", {}, {"FinancialData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"Morningstar"}], "\n   ", 
         XMLElement["datasource", {}, {"Quandl"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Row[{FinancialData[\"NASDAQ:AAPL\", \"LatestTrade\"]}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"AAPL\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    "\"144.84\"", 144.83999633789062`, AutoDelete -> True], 
                    NumberForm[#, {10, 2}]& ]}], #& , SyntaxForm -> Dot], 
                    "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" \"", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\" CHF\"", TraditionalForm], 
                    "\[VeryThinSpace]"}], "\[InvisibleSpace]", 
                    TagBox["133.94", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "133.94", "SRString" -> "133.94"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\[NoBreak]", 
                    "\")\""}], {FontColor -> GrayLevel[0.3], 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \"", 
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"AAPL | \"", "\"\"", "\"NASDAQ\"", "\" | \"", 
                    FormBox[
                    TagBox["\"15/10/2021\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "LatestTrade:CompanyData__More"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Price history", "scanner" -> "Data", "id" -> 
     "PriceHistory:CompanyData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CompanyData"}], "\n   ", 
         XMLElement["microsource", {}, {"FinancialData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"Morningstar"}], "\n   ", 
         XMLElement["datasource", {}, {"Quandl"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Financial\", \"NASDAQ:AAPL\"][EntityProperty[\"Financial\", \
\"Close\", \"Date\" -> {DateObject[{2020, 10, 16}], DateObject[{2021, 10, \
16}]}]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[{{}, 
                    GraphicsComplexBox[CompressedData["
1:eJztl2dwlFUUhj9EivxxgUhzhKW3oOvAgEjbgMogbUFBpC69BMiGQHrZGNLL
bgiE9HxJkNEZCAsIBAdlCUWERDMD0iEL6iBNVhAHGIrkvO9lzH9/bv5knjn3
3u8957733L1dFwRNXfyKpmmPm2haw/8Xf8aVS24HvPivjz00x/ziv+sm2Fr1
bHYDe/yWCnsqrBI3jAIbK4cIm5eDNc0r4205YKujWlhrs0zYPPCwsGk42Lqk
l8y3LgG7a2pmNbDTCfZEnpbx7m85v9UQiVuGLqfed4XtC8Fa3yJhV+ZyrncA
+veB7beQn+GaGr9NWLeu4Pf8hOvSwHY/5K/tARtn10vcVA/WbbXQ/1og61Mn
7E0OZL5t5zawcRfY/eCcxC2XAqknXtjefCXjX6H+JrC9ehrqu2Ml6xWK+p4H
m6+eENabruJ6TWS8NoNc3VPYeWaVqr+wW1vN/CpFn7cf2N35KPROW836HBC2
xJE1p7DnqWKvsKFPEPKf0mGe6J0aRD3BErdFB7F+PwvrWxkfUSBs6mlrNN46
2cb1Hsp6zgiwdva+sLvCxnq0s4r+WjX/a4nbJwTzey0k7goNZj7Rwh49mP6e
K2w4GUx/xQnXhaxhfdrNl3qWrOH3L0rcdHwNx+8Ttt5T43OFjYUhrOcAYcvR
EOZjFbbfDaH+raLX1XEt/TQH+saQ8+OFbdVrmU8XYf22ineE3nbr6N/ZwlrA
On7/LegNJD84Lt/ztg1l/IGwcST5gR16l4Uy3zclf/uGUO7XAmFD6zDqvSxs
HhbG9X4Xti0OU+dNWHeE0a/dhOv2h7H+sajfe+HUf0TYuSCc/aVe2J0Rzvp+
j/3eq8b7y3rGq+HKf8KueREqf2FPagTjGvR/Q468LeuZr0TQH7+h3i0jmf8t
1G9nJL+/FXovRjKfmdDbLIr5DIbed6I4fxjqWUnW7PDnuSj6Jwz7/0o0/TBd
2OMfzf0ehfP1WTT7iwXn5xeOd9yT8XXPOb5yrLDWL4bfT8D5+jSG+bfE+YqN
Ufpx/p+QW7WX/mDsHcv9/RDnf0qsug/Qr6JUPEbiri9jud8BwuYecdT/HOd/
UhzrvUj06eHkChP0l8dxflcZr9W+nI/+Nd6u+qfE3evszL8c+kvt7HfN0L9O
KO4J/X/bqXci+teaeK43A/Utjud5eoR++4PiVOj/K57750Y9C75gPEL0W4+Q
bZnoV3+q+CP0qw4JyCdxPPw7OoH7U4p+cIjxyqXoV7cSqL8W/eCN9Y3Op8G8
nnrq4N8V61X/Rj/4Yz339wL6QdtEfr8Cfh6RyPku+HlpIv2N8+jMJo84gX5m
SKI/zsLP7ydxP2ugf1ES92MX9Gclcf92QH8V41Wrcb6GJPP+zkY/m59M//8D
P6Qn875qCv17k1mfIdDv4fiqj3De5qZw/l70t5QU6o9Ef9udwu/thB8uM+43
EuexRSrqV3NJ2JCUqvThPnOlcv3BwrYLqewX/vDzq2ncz1PQ/3Ya6z0L/tie
xvnH4I+zafTHfvijSXpj/f3TeR6mQP/0dNa/N/rDMxVvDb19M/j9MdD7SQb3
4xr8G5NB/4SjPzzJaORfU69MtV/Qa8lkv8B94YzM5PeToXdLJvWeEbZ0z+L8
yfDDxCz6YxD8EJbF+n4AP5Rlsb4R8HNNFvdzEvzwsUOdP/h5rYPrH4QfSh2q
XvDDjw76fzv8fN/RyO/eYKfqH/BzkZP1aSX3geUYuaoz7juvk/2pD+6TTtnq
vsL9djibcTfutzvZ9FubBaK3/Qb69Tp+P4wmJ3aXuNO9gefPIOy+uUHVS9jr
l8N6bRE2jsph/g5hy/Icjp8g7Lmew3r8hPutzUZVb4mbhyv2F7Yt2cj6fi6s
OzfST9nCptc3UX+psHXoJuY7A/oXMj67C/Rnbmqsfx/jicOE7YNzVb8Xdllz
GQ+E/rRc6p8rbNiTSz3zob+e8yORT92czexvo4W1FPLAgdC/a3Oj71svbeb8
IuhvnsfxFahvYh7Pz6+o74489odj0H8+T/Vv6G+ar+5r6B+Qz/FJqO82xqv2
or5n8rn+bujXCrheOvT3L+B5CIb+aQXUl4P6nirg/O4Lpb5PC+jfx9Dfp5Dn
1SBxy9RC7vcgYXt0Ifd7nLC5ZxH15grbJhdRz0JhPYLxEaOF6yqKeP7ph27F
XG8n6jmhmPoSoDe0mOdNF/bqHD82H3pPFnN/A1DPcSXUcwW/10LI1Xfg55IS
1gP7aT5ewvxnot73Snj/zkE9g0uppz/qWVjK/vCdrGc9Wsr5F4Sdd0vVfSjs
7qizfqfRH/J0+mcR+kO1rvoL+sNtnfPRDzztypjvDegPKFP3C/rFwTLmfx6/
h2+Ucf/wfc2vnHqLhU0jyxl/CP3Lyun/Tqhnw/u9tqamR/3z6S/j/2Hf+973
voeffO972X/f+575+t73Uj/f+17dB773veZ73/ve9773PfT63vei1/e+b6zf
976nX3zve9Hre9+r++X/f9//C/HBXMA=
                    "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 253, 254, 252, 251, 250, 249, 248, 247, 
                    246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 
                    235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 
                    224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 
                    213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 
                    202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 
                    191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 
                    180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 
                    169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 
                    158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 
                    147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 
                    136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 
                    125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 
                    114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 
                    103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 
                    90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 
                    76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 
                    62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 
                    48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 
                    34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 
                    20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5,
                     4, 3, 2}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
                    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
                    29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
                    43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 
                    57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 
                    71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
                    85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 
                    99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
                     111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 
                    122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
                    133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 
                    144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 
                    155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 
                    166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
                    177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 
                    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 
                    199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
                    210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 
                    221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 
                    232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 
                    243, 244, 245, 246, 247, 248, 249, 250, 251, 252}]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]]}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]]}, {}}, {{
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1], 
                    RGBColor[
                    0.24, 0.3531726744018182, 0.6]]}, {}}}], {{}, {}}}, {
                   GridLines -> Dynamic[
                    Join[{{{3.8104992*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.818448*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.826224*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.8340864*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.8420352*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.849984*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {80, 100, 120, 140, 160, 180}}, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> NCache[
                    Rational[1, 4], 0.25], Axes -> {False, False}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {3.8117952*^9, 91.99799461364746}, 
                    AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1.], 
                    DisplayFunction :> Identity, Epilog -> {
                    CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], FrameTicks -> {{{{110., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["110.00", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "110.00", "SRString" -> "110.00"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {120., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["120.00", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "120.00", "SRString" -> "120.00"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {130., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["130.00", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "130.00", "SRString" -> "130.00"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {140., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["140.00", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "140.00", "SRString" -> "140.00"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {150., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["150.00", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "150.00", "SRString" -> "150.00"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {160., 
                    FormBox[
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["160.00", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "160.00", "SRString" -> "160.00"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {104., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {106., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {108., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {112., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {114., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {116., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {118., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {122., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {124., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {126., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {128., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {132., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {134., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {136., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {138., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {142., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {144., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {146., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {148., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {152., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {154., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {156., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {158., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {162., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {164., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {166., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{100., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {110., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {120., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {130., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {140., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {150., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {160., 
                    FormBox["\" \"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {102., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {104., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {106., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {108., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {112., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {114., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {116., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {118., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {122., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {124., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {126., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {128., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {132., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {134., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {136., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {138., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {142., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {144., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {146., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {148., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {152., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {154., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {156., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {158., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {98., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {96., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {94., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {92., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {162., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {164., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {166., 
                    FormBox["\" \"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{3.8104992*^9, 
                    FormBox[
                    StyleBox["\"Oct\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.818448*^9, 
                    FormBox[
                    StyleBox["\"Jan\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.826224*^9, 
                    FormBox[
                    StyleBox["\"Apr\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.8340864*^9, 
                    FormBox[
                    StyleBox["\"Jul\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.8420352*^9, 
                    FormBox[
                    StyleBox["\"Oct\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    StyleBox["\"Jan\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.8104992*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8131776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8157696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.818448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.818448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8211264*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8235456*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.826224*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.826224*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.828816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8314944*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8340864*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8340864*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8367648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8394432*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8420352*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8420352*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8447136*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.8473056*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}, None}}, GridLines -> {{{3.8104992*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.818448*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.826224*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.8340864*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.8420352*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.849984*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                    GrayLevel[0.9], ImageSize -> Full, 
                    LabelStyle -> {FontSize -> 10, FontFamily -> "Verdana"}, 
                    Method -> {
                    "NoShowPlotTheme" -> "Classic", "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{3.8117952*^9, 3.8432448*^9}, {
                    91.99799461364746, 166.2740036010742}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                    Ticks -> {{}, Automatic}, TicksStyle -> 
                    Directive[FontFamily -> "Times", FontSize -> 10]}], 
                  TemplateBox[{"\[NonBreakingSpace]", 
                    GraphicsBox[{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, {GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, ImageSize -> 
                    NCache[
                    Rational[143, 10], 14.3], 
                    BaselinePosition -> (Center -> Center)}], 
                    StyleBox[
                    "\"daily closing price\"", {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowWithSeparator"]}, "Labeled", 
                 DisplayFunction -> (FormBox[
                   GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], TraditionalForm]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Labeled", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", #2, "}"}], ",", 
                    RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Center", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                    "]"}]& )]}, {
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox["\"minimum\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    StyleBox["\"average\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    StyleBox["\"maximum\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]]}, {
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["108.77", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "108.77", "SRString" -> "108.77"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["132.48", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "132.48", "SRString" -> "132.48"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    "\[InvisibleSpace]", 
                    TagBox["156.69", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "156.69", "SRString" -> "156.69"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False]}, {
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    FormBox[
                    TagBox["\"Monday, Nov 2, 2020\"", Identity], 
                    TraditionalForm], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\[SpanFromAbove]", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    FormBox[
                    TagBox["\"Tuesday, Sep 7, 2021\"", Identity], 
                    TraditionalForm], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Top}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}, {1, 3} -> {Center, Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {{None}}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> None}, 
                   GridBoxItemSize -> {"Columns" -> {{
                    Scaled[0.33]}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.3}}},
                    FrameStyle -> GrayLevel[0.84], BaselinePosition -> 
                   Automatic, AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Column"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "statelist", {
        "count" -> "8", "value" -> "Last year", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Last year", "input" -> 
           "PriceHistory:CompanyData__Last year"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last week", "input" -> 
           "PriceHistory:CompanyData__Last week"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last month", "input" -> 
           "PriceHistory:CompanyData__Last month"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 2 years", "input" -> 
           "PriceHistory:CompanyData__Last 2 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 5 years", "input" -> 
           "PriceHistory:CompanyData__Last 5 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 10 years", "input" -> 
           "PriceHistory:CompanyData__Last 10 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Last 30 years", "input" -> 
           "PriceHistory:CompanyData__Last 30 years"}, {}], 
         XMLElement[
         "state", {
          "name" -> "All data", "input" -> 
           "PriceHistory:CompanyData__All data"}, {}]}], 
       XMLElement[
       "statelist", {
        "count" -> "4", "value" -> "Basic chart", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Basic chart", "input" -> 
           "PriceHistory:CompanyData__Basic chart"}, {}], 
         XMLElement[
         "state", {
          "name" -> "With MA", "input" -> 
           "PriceHistory:CompanyData__With MA"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Candlestick chart", "input" -> 
           "PriceHistory:CompanyData__Candlestick chart"}, {}], 
         XMLElement[
         "state", {
          "name" -> "With trend", "input" -> 
           "PriceHistory:CompanyData__With trend"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> 
         "PriceHistory:CompanyData__Log scale"}, {}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Corporate officers", "scanner" -> "Data", "id" -> 
     "CorporateOfficers:FinancialData", "position" -> "600", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"FinancialData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Morningstar"}], "\n    ", 
         XMLElement["datasource", {}, {"Quandl"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{
                   RowBox[{
                    StyleBox[
                    TemplateBox[{"\"Timothy D. Cook\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"Director and Chief Executive Officer\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Jeffery Williams\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Chief Operating Officer\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Katherine L. Adams\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"Senior Vice President, General Counsel and \
Secretary\"", "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Deirdre O'Brien\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"Senior Vice President, Retail and People\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Luca Maestri\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"Senior Vice President and Chief Financial Officer\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Chris Kondo\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"Senior Director, Corporate Accounting and Principal \
Accounting Officer\"", "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], "   ", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{" ", "\"total:\"", "6"}, "RowWithSeparator"],
                     "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                 LineIndent -> 0]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    FormBox[
                    TagBox["\"as of August 4, 2021\"", Identity], 
                    TraditionalForm], "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  Global`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show ownership", "input" -> 
         "CorporateOfficers:FinancialData__Show ownership"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "CorporateOfficers:FinancialData__More"}, {}]}]}], Typeset`pod7$$ = 
   XMLElement[
   "pod", {"title" -> "Board of directors", "scanner" -> "Data", "id" -> 
     "CorporateDirectors:FinancialData", "position" -> "700", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"FinancialData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Morningstar"}], "\n    ", 
         XMLElement["datasource", {}, {"Quandl"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{
                   RowBox[{
                    StyleBox[
                    TemplateBox[{"\"Arthur D. Levinson\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Chairman of the Board\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Timothy D. Cook\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"Director and Chief Executive Officer\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Albert A. Gore\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Independent Director\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Ronald D. Sugar\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Independent Director\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    StyleBox[
                    TemplateBox[{"\"Susan L. Wagner\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"Independent Director\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\n", 
                    "\"\[Ellipsis]\""}], "   ", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{" ", "\"total:\"", "8"}, "RowWithSeparator"],
                     "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                 LineIndent -> 0]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    FormBox[
                    TagBox["\"as of August 4, 2021\"", Identity], 
                    TraditionalForm], "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  Global`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show ownership", "input" -> 
         "CorporateDirectors:FinancialData__Show ownership"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "CorporateDirectors:FinancialData__More"}, {}]}]}], Typeset`pod8$$ = 
   XMLElement[
   "pod", {"title" -> "Map", "scanner" -> "Data", "id" -> 
     "WolframMap:CompanyData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CompanyData"}], "\n   ", 
         XMLElement["microsource", {}, {"OpenStreetMap"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                RasterBox[CompressedData["
1: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
eKAoutHPT0jZyCxTieHPOQ1HVZfFcn1aYeuN8jPJfP8v7ZXR8veqTwJxwgqt
TZQcGD93XcB2gjhltNmN2gadIlPJqqTWOiuuVXPEgeDpDFvZFgynMaSrbiNO
8qG/QpwlK+Dm4uq5hQuxPWsS4IDKvQqIc9hkHgCIrJbnIOYwzBOIw5rATb5K
TtmfhjSfa53l7p3bvIlPirIt6aS0N1InnZZo23jU03nlhZzhNK6/JkaukzLU
tnAML/mn9T9xuMEEGcUwmVzVP5OJIvmt2zIOrr03HS+JOOTnJ+bI6hOwbnvh
lsbM+2miV35/4YI7SNcWauoYUUb2mPuDoixDHK2YM5f4osquL/nAMDuBE/Z2
x3PEufo6pLxWXoJPVu/tXcoN7p2qxUnMIJqAyKTL6l1YgrXONs97++q7Lek1
KwsRR0erzLiTI457H+XJPH1g6FqfWYkk6BNkZBb/MtOq0XgHdi7J5OmhQN45
MiqBtWNlhydreqrk8ThfIU5e0XtLrlCAMzc+6l4B5OVXACUT3fztlRXm+maW
m0TMcV81RxyMhM6cRcu4rqkBqHWbDXN2N6FObijpLI44A1o1jmGq1ERySxMQ
vA1CHDzXpwMq0CcRLgZKJ+J4wGAn4ojBLs0UlajF6uilrFt5k3i5uFZxoXX0
75pE/wTpD2uzZSQGndK4+qJJ80LKA8kIsAIRDEAgjZ8+VmDIo490lWn5qh51
n+/3YJwvb57pNGyhMyeZZ5rTat28tKVhOj9WJ5WuswGpPhw1oZFz1dbFs53k
tLCYXKnaNJ6Ltt2qXhpx3IoEOK6j23/SA47soy5fdx9dtUXsJrpBDiHIce45
4HachA/E3xl70KhQUMENannri++9vfZ3q+VXMs7Sdf3SBfSAIw4HyausUlOl
NQdQsj65xPXBN7YLmmyYAFzKNwaBupRNstZ523wKh7c+PJhVO5OI44Nc8kIy
WRJJpLMsacfh1KZKzZmxzpOFOL4CO+GGJ5RdNlbX1YibrY+OOAQan3Q6wSdg
QjeSvxMzkYzazsn+RJn4udrvJC6hVUeVvrdzZK4RLiP4K3tR8pk6WyDb1X0T
Wyq6D3ESX7U54uxtVG0vLxmJXKuT69zy0inL1F0oyTMhsD96eJg4bulbqGh4
5ANGxNnHedW2QPlI8xByTKKWyrGtqMzfRTrS2liLhG2r21KzShHViUFzaDKO
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
DQVBHf8uiwcfsuKYuIKO25y3UpUlstDRUM6NF+9Sq/SCVs2LJKJVmyw1mVYt
N3aww55uws6zIA5hVJXGKhG7RvsI3AmIOOcef4T5oDoQ+yhqzbFuQl9OCbm0
MbUwVZ4P4owzbYHSDqNlgZrPtbrvC0Yc2nGgECs2ldzDsEQl29wCIZfSSzyd
HtBK0Otce0kiUPSRHKmZi/ccomSnSqEhjcAi1+rgJgRriNd9J2mU6G9PyZ3U
RgGIirVtEEcJl9NiNWlKDW6ojJMDSieF7IsHUMZZRpxG8nZujzgcRmX726jy
UiUnsYAjPMcUNaUMomqWcohDFmsbxKkk2UhOfl0jHebkGbZDnAAE0RoeiOQ/
3TT53ck4Tghyp8A9+F+jS1u4yCgEzXkObIM4w7zAXolGWpv6/Q6jyHPuvjTU
vXcSaFOp/lllnKh2aySiU0NpMHPgQva8EKfKHHTZjMQRceyOJvLcXF09F8RR
5M2fExqzbiapi7sCOXNeqpXCrAvt841R9lCC5XvY406k4udhoeplumc5yt49
tjNwLLy+M6Dnwk4RboYMcSiGuNOrko2DnBX9IoppwQxxoEp1/LZSWpLrYUar
5g7mMzRSJIVAg5+qaMfZ0nNAtWqdGDjamL+O2yFeJrorOzGwynI+OGapKE46
5C1e7RllHCph2ugJ2c20VvS0+q+TxWZ9t0Y3M1htgkRz8GcBdMY4x9BtT8kT
YH2KHTPKO+Hinx7SUS1xMBbEcRzIMNNU6uSSqWIwXT0GjARTzv2ptAGJ8NOP
u4cn4fqI8318963cUfxfRx/sp9136Epktzg5OdIDBllr5CWatEi0mkIacS51
PJX7iWVJ1UwfXHfSVIp6KaWo9uI8/VRw8/DhcS7jcLrqKrBxS/QqIwtq7/tF
Iw58m+lOtow1bs0ukFx+yioqn+u0Fl7RSKHt88VMYnlpmH+OuSs1I+XnY7LK
z2NhMoMSzVqppcfmMol10cJLThvNvWnxXTpRTedwo7YbmG+c0J0LCNqqNIGk
/jQtzFjJegFxCCg54vDFy4gzzmencyPR5raKNnzsBRknRxzd2WcppLQpzSHr
SOBzXhDuRk72VDGNBEeJDEee0nqTBmptiTiNuD4Oi1o1R7rdxYcUceZ8t764
7ny3tkScLuYKq6WmG060yQnfqrVIzmpK+1eQne/xRy1+MlQ6vn/L/rW7F93b
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
                 "], Automatic, {0, 255}], {
                 TagBox[
                  TooltipBox[
                   GraphicsGroupBox[{
                    GrayLevel[0], 
                    Opacity[0.3], 
                    DiskBox[
                    Offset[{2, -2}, 
                    Scaled[{0.5017279999999688, 0.49644310843606926`}]], 
                    Offset[4]], 
                    RGBColor[1, 0, 0], 
                    Opacity[1], 
                    EdgeForm[{
                    AbsoluteThickness[0.8], 
                    GrayLevel[1]}], 
                    DiskBox[
                    Scaled[{0.5017279999999688, 0.49644310843606926`}], 
                    Offset[4]]}], "\"Apple\"", LabelStyle -> "TextStyling"], 
                  Annotation[#, "Apple", "Tooltip"]& ]}}, PlotRangeClipping -> 
               True, PlotRangePadding -> None, ImageSize -> {550, 256}, 
               PlotRange -> {{0, 550}, {0, 256}}], 
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", 
                 "\"based on current OpenStreetMap data\"", "\[NoBreak]", 
                 "\")\""}], {
               FontColor -> GrayLevel[0.7], FontFamily -> "Verdana", FontSize -> 
                10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "13", "value" -> "20 kilometers across", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "8 kilometers across", "input" -> 
           "WolframMap:CompanyData__8 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "20 kilometers across", "input" -> 
           "WolframMap:CompanyData__20 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "30 kilometers across", "input" -> 
           "WolframMap:CompanyData__30 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "70 kilometers across", "input" -> 
           "WolframMap:CompanyData__70 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "130 kilometers across", "input" -> 
           "WolframMap:CompanyData__130 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "270 kilometers across", "input" -> 
           "WolframMap:CompanyData__270 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "540 kilometers across", "input" -> 
           "WolframMap:CompanyData__540 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "1100 kilometers across", "input" -> 
           "WolframMap:CompanyData__1100 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "2100 kilometers across", "input" -> 
           "WolframMap:CompanyData__2100 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "4300 kilometers across", "input" -> 
           "WolframMap:CompanyData__4300 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "8400 kilometers across", "input" -> 
           "WolframMap:CompanyData__8400 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "14000 kilometers across", "input" -> 
           "WolframMap:CompanyData__14000 kilometers across"}, {}], 
         XMLElement[
         "state", {
          "name" -> "27000 kilometers across", "input" -> 
           "WolframMap:CompanyData__27000 kilometers across"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "Non-metric", "input" -> 
         "WolframMap:CompanyData__Non-metric"}, {}]}]}], Typeset`pod9$$ = 
   XMLElement[
   "pod", {"title" -> "Web statistics for all of apple.com", "scanner" -> 
     "Data", "id" -> "WebSiteStatisticsPod:InternetData", "position" -> "900",
      "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"InternetData"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Company\", \"Apple::5zkjq\"], \
{EntityProperty[\"InternetDomain\", \"SiteViews\"], \
EntityProperty[\"InternetDomain\", \"SiteVisitors\"]}, \
\"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    TagBox["\"daily page views\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"\[TildeTilde]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["170", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "170", "SRString" -> "170"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"hits\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"d\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", "\"hits per day\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowWithSeparators"], 
                    "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"based on Alexa estimates, as of  \"", 
                    FormBox[
                    TagBox["\"01/10/2021\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"daily visitors\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"\[TildeTilde]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["45", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "45", "SRString" -> "45"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {ShowStringCharacters -> False, FontFamily -> 
                    "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"visits\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"d\""}], FontFamily -> "Helvetica",
                     FontSize -> Smaller]}], Identity], #& , SyntaxForm -> 
                    Dot], "  ", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", "\"visits per day\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowWithSeparators"], 
                    "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"based on Alexa estimates, as of  \"", 
                    FormBox[
                    TagBox["\"01/10/2021\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                    TagBox[
                    PaneBox[
                    TagBox["\"site rank\"", Identity], 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"\[TildeTilde]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    TagBox[
                    SuperscriptBox["52", "\"nd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"52", "\"nd\""}]]]}, 
                    "RowWithSeparators"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"based on Alexa estimates, as of \"", 
                    FormBox[
                    TagBox["\"01/10/2021\"", Identity], TraditionalForm], 
                    "\", and assuming \"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["4.209", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "4.209", "SRString" -> "4.209"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"billion\"", {
                    ShowStringCharacters -> False, FontFamily -> "Helvetica", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000000& , AutoDelete -> True]}]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], 
                    "\" global internet users\""}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show history", "input" -> 
         "WebSiteStatisticsPod:InternetData__Show history"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Subdomains", "input" -> 
         "WebSiteStatisticsPod:InternetData__Subdomains"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "WebSiteStatisticsPod:InternetData__More"}, {}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Logo", "scanner" -> "Data", "id" -> 
     "Image:CompanyData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "imagesource", {}, {
        "http://en.wikipedia.org/wiki/File:Apple_logo_black.svg"}], 
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CompanyData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzt3X1MVWUcB/CTpF6ulmGZ+JYgim/ptIRSU9CiaZkuFFMsUok0HVigM5sT
J/iCE1M0rdACdeTmBHWJGeqUxBcKZSSJaJYSKk5C04GGYXf7fqlxJ957z7nn
3ON9znfDz+AP/D08nHuf87wcfKfOCn2/iSRJcSbLP6FT5g6LjZ0yb6yX5ZOw
mLgPpsVEvTcyZnbUtKjY/oHTPSxfHW75CLR8PCoZeXAOtKCvwtzPYOTPMPxP
2HyEtnUZQbY0gzNeh613wTVV8N69hqbUwjajtKnPCHLeF4akwsE3oXX/WJtX
DUuDVS/RiCXHBsFz+dBW/1jbpAKO6alunaLHYwh8sxQ62k/1xh+DVx5Xr1aR
c90fTi2Ecvup3tAV8Fd1yhU2J83Q9xuotJ9u34DZQ9WpV/REhkO/21Bpf72R
ye/nqU69oqaNFyz6ASrtp8uVsCRYlXKFT/8xcJXC68pUB5svgUc91KlX1Nx8
BJ7+Aiq9rvJ3wA1PqlOv6NnP18GhJ6DcfhqzFx7xUa1UI5Z07wETrkB7+2ff
Hdg0Hb7TUd06jSB5gTD5L9hY/5zl+1JXzt/ejII9Wqhfo5H/k/M8nHgVfn4L
epfBS3tg5Uz4diftansY055LOXX8Pe78BDzeEh5WOP4axe8TFAxHvARf8YO5
Jse+3zDWmc3XxzjOFy7tBT/kfHHCU3BHM8e+v6vDaRppFX9vk0LhoGXQlAVn
5sGOHBd4HYXDt8PieBgYAq+qND7j25WUyf4wj4NVq+HGQ7CQE091nOet4PVr
4nW7mK+rQ7JhIMf/CVwfW6CT8WUAx89dnoMrP4XfnYEX/4Zyx2keXLfY8ROc
swj2CoDlzR2rN4vzszUvwz/WwN0lsFphvdY2q4E+XAeo+wj+0t6xupVmuzc0
J0LTJeisdtoy8ho/3wmTp8MtA+CKrrByMBw/F/rmwu63tK33v/tv+gl//wby
ek5Racm/iuOv/INwq8btbcxNtIDrwafKYW871x9dZTzHsREJMJXvv0qTw30M
C86qW7+oXuP+gvUpMFxmv5Vw3aDDb65tjyh+xX4bx/fpPDvHm0l8/Q86qY92
iOZ+jk862Lo/5LpOcro+6hZFM/X/FmY8C5dw/N1Y6u8/Qqr10Q53N4zzYhGb
4PSnJbtSwfuSuwf00Q539xot2wZ9OD9ibwJHwxM1+miPuxvB+y9PzmfZmyDe
p21O00c73F1v3m9VytwXbOI8qHTOte0QxVK+T4XInBdOeAsGOGn/kOH9TeV1
NXaYpCjlK2GhTtrlrmZxnv9LhfNNS/a5th2iOGAxtHE7ZTOdjPctVa2+C5eP
l5ySokbONxk6xxlctwnnuo7SfO3k9TnDhkbzHGaPfpJT8oxO2uWuVrC/Ljup
v3L/0bZ+0bzD18MN3PejNMXGvK6qtuL1kO6k8UZFhbb1i2oG1x+V5vAp19Qv
mpN5n9uC5wflJjLbte0QxT0cd4x7UVKUWM5HlemkXe7qXRqzFvrJ3Me8cDIs
NO7DNPE09wVPlDlePMbzAVuNcYemrs6B8W0kh9KX59sWHtVHO0TRn/s21q2D
F+w8x9SHE8YpKfpoh2j6cL9hLc8dRLeS7ErWWNi2Vh/tEM3fOY9/IwPe5v7P
xtL+GZhsrK/owjk8n1QaAYe2lhqkpglM3KiPeg2hmeeqo76X7hs/7mvraezn
0JXbOK9hnT687jyP66NO0X2X8/EDJkgPTBHPAXar00fdorqW54YzbZynXdQZ
jj6jj7pFcxLXYc7xOQa2wscxSl7zYZpxnWnq4iK42sFzznEc5x801l00MYn3
YROiYRfJsdRvG27H89zXjXlhVe3I96s9Dp5Xsc5wzpP4GutlqhjBc/FpfA6g
s1LE9bYj5erULZrraRfO+8o9B9FY/Dk/HDMLjjBeHxWZVAC7dZZUTT/u25+X
Ia9O0V3K/QGT+PcktMphnh8rLbh/XYYNLeP6RxHvk7q76Pmy+4Lg6YvQ1T8X
vVlO4zbDmsckl8aHtuTzBY64eH/Bct7fp9fPE7i4v9buhhs1fs6XrZg5HskJ
g3tVut5e4z7nU5yX7sfxVVYMzJ8I+7KOnlPgCwvgSD5HvvgCDHVyfWv4+xLM
/2c25x30nlruA8rkcyK8HFy/XsrrY8N5+CP/DlcAn4fn5yWvLnNTmNgNTuJ8
QirPQc6U+fy2KN7n9OF+3hqrdcaHJdFtaRycz+cZLON6gQ/7JZHPyWvH596V
fAy9e8NDSg8o2khf/nx38TmbBWnwVjEM4d8N8OT4zo9f38l9hWEDYZXT6/wX
CH6aEA==
                "], {{0, 66}, {54, 0}}, {0, 65535}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Bit16", ColorSpace -> "RGB", Interleaving -> True], 
               Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {54, 66}, PlotRange -> {{0, 54}, {0, 66}}], 
             Annotation[#, 
              Association[
              "URL" -> 
               "http://www.wolframcdn.com/waimage/hset037/ec9/\
ec903e2ed065848bcada1cce4bcefba1_v001xs.png", "Dimensions" -> {54, 66}, 
               "Source" -> 
               "http://en.wikipedia.org/wiki/File:Apple_logo_black.svg", 
               "Popup" -> 
               "hset037/ec9/ec903e2ed065848bcada1cce4bcefba1_v001ms.png"], 
              "Image"]& ], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Wikipedia summary", "scanner" -> 
     "MathematicalFunctionData", "id" -> "WikipediaSummary:CompanyData", 
     "position" -> "1100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            InterpretationBox[
             Cell[
             "Apple Inc. is an American multinational technology company that \
specializes in consumer electronics, computer software, and online services. \
Apple is the world's largest technology company by revenue (totaling $274.5 \
billion in 2020) and, since January 2021, the world's most valuable company. \
As of 2021, Apple is the world's fourth\[Dash]largest PC vendor by unit \
sales, and fourth\[Dash]largest smartphone manufacturer. It is one of the Big \
Five American information technology companies, along with Amazon, Google, \
Microsoft, and Facebook.", FontFamily -> "Helvetica", FontSize -> 12, 
              LineSpacing -> {1, 3}], 
             TextCell[
             "Apple Inc. is an American multinational technology company that \
specializes in consumer electronics, computer software, and online services. \
Apple is the world's largest technology company by revenue (totaling $274.5 \
billion in 2020) and, since January 2021, the world's most valuable company. \
As of 2021, Apple is the world's fourth\[Dash]largest PC vendor by unit \
sales, and fourth\[Dash]largest smartphone manufacturer. It is one of the Big \
Five American information technology companies, along with Amazon, Google, \
Microsoft, and Facebook.", FontFamily -> "Helvetica", FontSize -> 12, 
              LineSpacing -> {1, 3}]], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {}, {
           XMLElement[
           "link", {
            "url" -> "http://en.wikipedia.org/wiki?curid=856", "text" -> 
             "Full entry"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Wikipedia page hits history", "scanner" -> "Data", 
     "id" -> "PopularityPod:WikipediaStatsData", "position" -> "1200", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  GraphicsBox[{
                    GraphicsComplexBox[CompressedData["
1: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
m9tI3F//x9dOvxnUWSf7pQ6SeHbBPhvNgBY4sW3K6bHjJF4Z1VcvG+JB1rp7
6w+Gkaj8bPU/Kf5L8E7SSwi9zPR9Tdua2uiXIG7VLiV/l8R44xPt0d7M803u
bbn1jMT1VhcunLrKhiEQYd1qIFFh/I3N71IB3Nu7lpR7TWLIM9MkLROmT1uc
b275wuyHazdlC+rqIOLA0+lRv5j5nLVSp2Y2831az7W+m07hpt7W2x6ZDfDs
wRrNkXkUPpBF1pWBBhj8OCv3nBaFrjq50q26lXD1iUXQ39UURn8gOFcS6mF2
37Xjg5YULjQ9pzjG5Ns1ZDJ1/34KzyzJiZLz4sDOwF024d4Uvl+qtfW+oxBC
I1rqi89QOPbsZNSyxVz4crL56pR4CqVTCzeIZXOBbC0dnHmbQlPdNLt9qQ3Q
cLn8dHQehXflJUTsjfmwpijncn01hcm2nc+jznFhiKxyF2+hsHF3qJS/Ght6
p++97vWOwor8hT9DXIRw9GKX7cVhCt0+Cf1Xywqh6WjQeoUpNCrnUQqr7nPh
Zm/A8TQZGs99vj8SdYwFa1/EtqRo0BhJHaHGU4Xw7G+Fq/gqGvuiJHoSx7jA
zewMNdlE47snY4dK5YWg5KC8L8COxgV1cwIuIA9yRj8mcQ7TOKuqWTfimhDa
/ly1bT/BvL/mwtv7c1jw98L1V6FRNF7a+Up8/kEWTLQqPww7SuC6LHHjvveV
MKATZ/r4DIFvAuXvP5VmQdGgzH/b4wmMZvsqKHqzYKdi8S+PWwSOBWoOjkrU
gl1r6YrAPAJrBqwKYjprwGDo9c3fVQSWDqxd92vjC8j1exu/qoWZl6T5x1d2
18GBzsN9ce8JdLi0d6r9gXqw2TV/cGiY4aWd11JfB7CgV+95lLQoifrhdXKG
oTwwD/be9UCGRJEpO1Vcl3PgzCLTHcWLSIT+5V7cVQJY6OSTULSSRJX/yogE
UTbcmHgxscyCxL9lz6zdFn2EvClDo052JMpW7sal71pggsq2eXiEmZ/IVq3A
l00QT0Qd/i+ERJ85GxLvHG2CF1t3T5eNZubNR1rgcKwFKuas7rh9k8Scta/I
ZbObwMF0hsGnRyRWd7GfueZxwMB6H2leQeL1115ryi4JwdL3pXOegMRdYWae
CwN5MPHL2OXVWxKfTo05OazK8N3n4mT/ARKP1IrujztSC1/XbvsZNUGiL78u
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
O8ydZJsV05n/n/8DzS8IIA==
                    "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1: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
brAuGedg66Y6e7gNdbbH7x+2gVcNm6H3jdyMmyzOp/JA/j9xfuI/Z3ZFbsv/
Tp7MzcCdpfuv68PYJ9xccRZyvWb2s84rvGs6r8S7gLyKV1heFv8G/xtPcFdy
x2AZuUOxDNwjPk24u/EG3OPcltYHudu4XeXq/PX8qnEuN/uA/3ecR/gPuk7k
djGvxr2MteFewCbppY/3Cb285pO5D5g/He8+cW+QD+Bbo8v9Qq8K97z1M+ZJ
4vzLe1/3rzhD6K2T81hPwDvjl7DWet9iM3Qfkifh98tXuL2sv+f+FPfnyPb+
nt8rnkfYG1hJbKXeI+ZL9R43X2E+Ot7PdO7T+RBLrzNOXi+XiHO23FhvF7++
3hZ+VWwdtzI2nXtObhrvYdgA7p9xnuB2ki/KrbjfyIO4E7n3cqfr/uP6ID6R
nxO/ze+JX+X3jOeP+eucEubFdVdwC2FLuBWw5dgoLIPOEPN7dQ75NOJ9jdfj
HdVrbr2fu5n7XDxj+Wv5T8Z5xroJlhjrr/dHnCf0cruON+8YX6/Od1hLnfPx
vNfLI0/g5JB7ul7l/hjPFu7L9rzCfTnu49hrWHFsuU5B88U6I+X0vMFyOt7Y
eH7KxeP8HWfVOH/zd+rX5W/iV8Y/51fCz1g35iaKdw/ue9w78Tzm5nIdhz2L
XTBvoXPOfJpebnk8nl2+HP9W6yvcH+KZIr9k38v8l+Iejr2KPYYt0ytgvsh4
G688tgwbgTWV79UbhN+jt876sTh/WzfQ28F9Sq+Z6z7zr3S6xDOKt0anIu+0
daN478L66fwez2SdDnIV7rdmzblnzQbKE/jp+FN1c2Hj+NnibBbvGTpLzfLz
F5qlNdvvky7O1ObbuXXMj8T913qvfTbqVLLnap0n4muX3+X+Fs8pcW2c3a3H
ctvH9yLucXgz/hl8vO49cc7XfcB8LDer+a147nF74Je4L+KL5X/lPvxi+BJ+
PmwB/2M5HTZQTsMdw10rPxrn6zhTy/X52+xfO/5mwq+Ir+I/Hmcr64bcf+N7
zX2H+2s8n7j3u47B2umcN39G53Sc8bn3y2PwLPKl+Dmwvsy9ye0jv2jfi/zu
8Xtr3Rsrii3We9h8vl45naXmH5k30bmH9wGWWudz62LYXut6Olu5tXSauu4x
36DTOe7hvJU6FXifySflBvHOJffV+yXuZ3pt+efkptxT8gfccdy03E+4ObHR
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
X4u/U67E3xpfQ/w3kvvi/wMMp5Nq
                    "]]}]}, {}, {}}, {{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1: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
yvP5L8ofcu+JPR7vkvl7vI/i3Qa7jL0f9xCd4Y7P6EyIZ5Rcn3tOLsttzh3G
zRTXMnbH8QsskXkt8xPOWUpvmU6ZeM7prMN+wupyD8iv6W21rqG3l/uITy9+
6ngWcedzi+JzebnMF8S/f+ztsI+we+P9Rucy9r7ODfMM3BHmmeNewZkY53Uc
EXsg3dN4A/55vAW/q/w3/0s5sfwG9yR3Ire07nJuWXk99jp3G7cmdx+Wn7sS
G8pNJffmppFry4P4C/Bi/Hl6ubGFegXifmaeKN5xdK6Yd9D5WOcmdgXrgF2S
M+qNtM6iNymeV3JD/gW5Zfz9hvsMvpzbDfvHugeWOf7WhNfGTzl3Gd0VeuWs
N5jvNq/HPRh/R4g9oc8oOavuZG6qeObFO5D5m3oXzctx39IdgWWO6xT71/Er
7L7YE+mt5L6i15q70WwPtz7nkFyNv926Fn8/N7VPH/6jcS/jLuQWxzfFuyn3
OWwRt2A8Q7hX5Y7cW/JVbse4T8R7v2M23l2z7+O8jqPivQdrpHMJa6Xzhfwf
t2e86/lnJDWrwz3NnSSX0/2R/6q8CavO38F/g38AK8D9EUtj/S3vMes6ekO4
i7AS3Pk6ebDFOi/Fs4N7Te7E/YT7u9k1bifuZTkTf4x1dv6UeL7IjfmX5dbc
kdwscW2a33X8Ot71Yo+G1cXOOO8reqt0yltvjnsgdye3NjcV9yBekLsKHxZ7
G7kvP21ct3GN8p+Xl/Bflj/hJo53Kt518868T/X+wK5jneOeoDPW8Vmdqbw0
5qN5F8yb6Fwxf0Wnjc4oLCt3hdwDjz8ifoM/EPsg3dVyBd02+BazvfwG/MNy
Tfou6zr8Q9zHfPrx08V/F+5ibkl8M3chNy+2lJtfLoR/iieJ/aXez9gHerfN
M3PHmeeI5xd3Gv4od0y8a8gXjZvyr+Jv87+KP4fIveLvOnI97lnu5NgT6a7B
Kspb497H/cm563IPYy9xV2NprfvzHreuqzecuwQrxd0S76d6L+DL9ArHPZr/
i/wh/0/5Z+4H3CvcLNzx1jnjuSdPj58NPjbefbBmetewd/R6xiNa7i1n4yYz
q889x62gtxarZL0t7n3c3c5bj5uaeyTeH7hr8OGxx5EH8NPLI+Lnz88nL4/7
Gl4knsn8++KeLX/E/xX/iP8XlpU/AcvFn4Gl5Y7DLps35103f1WvLXc0li2u
eSwR1ifeb80bmJ/Xqai/zrxy7INjD43twxrqHJFr6+2xrq93lPu4z0D+E/yR
3KXc0vjWeBflvoitiPtN7Cnxz/Gk8S6l9xv2sd4d82zciea5ufdyZ+LpuOPx
XvIVvAX/Z7wd/xs5sfxtvG/JDbkXuN/H3kh3PVYl9sfyDnw//mZc83p7HRvo
HeMVMl/LS2/9nc6T1vV0Ruksw8pwt8lL9fLjK/WKxfeZf0P+hP+3/Av3Q+5V
bnbuJOvn4rktz4qfEz4h3omwlnq/YO31esV2R+4bf//gpjB7k3uRW1lvA/aa
9c64N3H3OW9Dbhrucbwwd11cN7EnkgfxM8ij49+fX0D+kV9c7sK9P56bsdfk
3sQ+5X4W71X4r/hHcf/Rm+yYR2927B/jeR/vQuZv6fxqXl7nXZ0xWHZu77gF
Yf1iTx17Kb2N8ut6u+QDvEa8o3r1uPut3+Se4D3pM5ibkTuGuxwvKK+K+z2/
ROwn9B+I9ynuLewz7r/mObjfmz8f+wzuHPwJ7qR4z5av4634v+Hv8fvISeX+
sW+WG3EvcafEvkl3E1Y13ktiTx3faf4B52/EPxnvcfz1eAbrIdynrOtzx8a/
N1Y27sk6L2Gr453cvJv5g7EX1fnd/HOdz3X+w37DPsauyTn1pljn1Zsb91a5
Nf+G/D53LPdZfCX327jFYgNirxp7KP5muZpz75YPchvHdc476NiY96jeKV5R
bAMvo/VQnaetx+ms5L4sr4lnFreUWXduMv0f5C78P/Au/LtYLv5U7AX+vPg9
cidjfeI9CGvDvYlVkDvwx+E5+H2xB7CB8Sw1b2x+Wa+qc2wxr27dLvbf2CGs
SVzzOoccm+ic5j3lM4ybiTuet4JXDt8e76rcQtjaeM+Ka4d7W+6aOOF//+Nt
bodp3HzWSWJfhGeIfQ7+K/Y29xbWUbef/KD8nfwsN7VZE+4V7tTYf+luxWvI
e+O7yz/s3E35Z7CnfYbjz8R7Nb4KLyyvi/et2D85V/J41+L9ad6N18V578Fv
YJ/EfURnuuOLZvN5Gc2n8H4zf0fnd/OKOp2cbzyWk/uj3B9Phg+K+0XsvXS3
yTV198mHuU25x7iNuEesm3Efk89yi+EbuZmsR+hljv273mpuEXk9txC3rNmX
3IdiryZ35/+Fd+ffy8nDn4Hlt14Qvzvu1PgbDPcG1pb7B1ZJ7uxcE/Bc/AFY
cmxwXLvmTc2v6tVwju3mtazb6+zHjmDNdI7LjfWOWjfXO8d9xmckP0vsSeM6
576Cr+EVNd8Qe4PYq2I9sBTxzqVzB/tCJ1H8zYI707xA7MtjXxS/W+60+BtN
vGPg7fi38Q+cZ6D8kDwkfp5yM+417rTYf+nuwN6Q35UP4Efx5nF96x1zbKF3
nlfcfBMvs/UonazWDXQm6/yIvcpdq1MM2xj7w9hXmaeM/a3O3+Zf6nTVSYzf
xD7Frst59WZZFzRfFPdVuT3/T/lD55nIzY2v4n6HpcCGYjnktHhz/Hr8rUd3
J1bb+mD8nrjH9VpyL2BZfEbj2eL5jK/Di8ubYl8SeynneZi/IPay3H+wHtwk
8TcM7mzsJevFWCbudOx383d5f5lXjj2R80zCnuMOwlJiw7B05i3Mf46/P+jv
Mq9j/Z7OIewY1kLnhNxM74T1W3oXuSWwzdys1mP0sls35E2J7zFWnrtDXq9X
At8cz8X4+fP/lb/i32d2i/tZkv///+zk4/4f8NKRdw==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$2199121#1"]& ]}}], {}}, {
                   GridLines -> Dynamic[
                    Join[{{{3.3450624*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4081344*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.5343648*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.5975232*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.6605952*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7237536*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.849984*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {0, 10000, 20000, 30000, 40000, 50000, 
                    60000}}, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10000., 
                    FormBox[
                    TagBox["10000", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20000., 
                    FormBox[
                    TagBox["20000", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30000., 
                    FormBox[
                    TagBox["30000", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {40000., 
                    FormBox[
                    TagBox["40000", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {50000., 
                    FormBox[
                    TagBox["50000", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {38000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {42000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {44000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {46000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {48000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {30000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {40000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {50000., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {22000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {24000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {26000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {28000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {32000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {34000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {36000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {38000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {42000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {44000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {46000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {48000., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{3.3450624*^9, 
                    FormBox[
                    StyleBox["\"2006\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    StyleBox["\"2008\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    StyleBox["\"2010\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    StyleBox["\"2012\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    StyleBox["\"2014\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    StyleBox["\"2016\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    StyleBox["\"2018\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    StyleBox["\"2020\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    StyleBox["\"2022\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}}, {{3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3765984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4397568*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5028288*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5659872*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6290592*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6922176*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7552896*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.818448*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.849984*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                    GridLines -> {{{3.3450624*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4081344*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.5343648*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.5975232*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.6605952*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7237536*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.849984*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, PlotRangePadding -> None, 
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, 
                    AxesOrigin -> {3.405456*^9, 0}, 
                    FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {10000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {30000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {40000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {50000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {22000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {24000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {26000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {28000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {32000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {34000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {36000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {38000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {42000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {44000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {46000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {48000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {52000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {54000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {56000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {58000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {60000., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.42*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.44*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.46*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.48*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.52*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.54*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.56*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.58*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.62*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.64*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.66*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.68*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.72*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.74*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.76*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.78*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.82*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.84*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.86*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.88*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {{{3.3450624*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4081344*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.5343648*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.5975232*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.6605952*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7237536*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.849984*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                    Identity, 
                    PlotRangePadding -> {{None, None}, {None, None}}, 
                    PlotRangeClipping -> True, ImagePadding -> All, 
                    DisplayFunction -> Identity, AspectRatio -> 0.2, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {3.405456*^9, 0}, AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {{{3.3450624*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4081344*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.5343648*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.5975232*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.6605952*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7237536*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.849984*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                    GrayLevel[0.9], ImageSize -> Full, 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> PointSize[Medium], 
                    "PointSizeFunction" -> "SmallPointSize", 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                    PlotRange -> {{3.405456*^9, 3.8367648*^9}, {
                    0, 50940.52001582033}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                    Opacity[0], 
                    TagBox[
                    RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                    Ticks -> {Automatic, Automatic}}], 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"in hits per day\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, "Labeled", DisplayFunction -> (FormBox[
                   GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    
                    ItemBox[#2, Alignment -> {Left, Inherited}, 
                    DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], TraditionalForm]& ), 
                 InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Labeled", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", #2, "}"}], ",", 
                    RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                    "]"}]& )]}, {
                PaneBox[
                 TagBox[
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{
                    "\"based on monthly averages of daily hits to English\
\[Hyphen]language \"", 
                    TagBox[
                    StyleBox[
                    
                    TemplateBox[{"\"\\\"\"", "\"Apple\"", "\"\\\"\""}, 
                    "RowDefault"], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], Annotation[#, {
                    "URL" -> "http://en.wikipedia.org/wiki?curid=856", 
                    "Popup" -> "link to Wikipedia", "OneClick" -> False}, 
                    "ExternalLink"]& ], "\" page\""}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                   FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Log scale", "input" -> 
         "PopularityPod:WikipediaStatsData__Log scale"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "apple", "template" -> 
        "Assuming \"apple\" is a company${separator}Use as ${desc} or ${desc} \
or ${desc} or ${desc} or ${desc} or ${desc} or ${desc} instead", "count" -> 
        "8", "pulldown" -> "false", "default" -> 
        "{\"C\", \"apple\"} -> {\"Company\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Company", "desc" -> "a company", "input" -> 
          "{\"C\", \"apple\"} -> {\"Company\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Financial", "desc" -> "a financial entity", "input" -> 
          "{\"C\", \"apple\"} -> {\"Financial\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ExpandedFood", "desc" -> "a food", "input" -> 
          "{\"C\", \"apple\"} -> {\"ExpandedFood\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Internet", "desc" -> "an internet domain", "input" -> 
          "{\"C\", \"apple\"} -> {\"Internet\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "RetailLocationClass", "desc" -> 
          "a computers & electronics retail chain", "input" -> 
          "{\"C\", \"apple\"} -> {{\"RetailLocationClass\", \"a computers & \
electronics retail chain\"}}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Plant", "desc" -> "a plant", "input" -> 
          "{\"C\", \"apple\"} -> {\"Plant\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "CommonMaterial", "desc" -> "a general material", "input" -> 
          "{\"C\", \"apple\"} -> {\"CommonMaterial\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"apple\"} -> {\"Word\"}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "4"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www4c.wolframalpha.com/sources/\
CompanyDataSourceInformationNotes.html", "text" -> "Company data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4c.wolframalpha.com/sources/\
FinancialDataSourceInformationNotes.html", "text" -> "Financial data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4c.wolframalpha.com/sources/\
InternetDataSourceInformationNotes.html", "text" -> "Internet data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www4c.wolframalpha.com/sources/\
OpenStreetMapSourceInformationNotes.html", "text" -> 
        "Open street map"}, {}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "12", "datatypes" -> "Company,Financial,Internet", 
    "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.722", 
    "parsetiming" -> "0.233", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP162713b7e5ea58db766f000037961h923i3c492e", "host" -> 
    "https://www4c.wolframalpha.com", "server" -> "18", "related" -> 
    "https://www4c.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa162813b7e5ea58db766f000014ca4ba61560b3b66918469493901911210", "version" -> 
    "2.6", "inputstring" -> "apple"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2021, 10, 16, 16, 37, 7.9294145`8.65181609070051}, "Line" -> 
    25, "SessionID" -> 17590066323315969118}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10, 11, 12}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {
   "CompanyInformation:CompanyData", "Company information", 1, 1, "Input", 
    "Dataset[EntityValue[Entity[\"Company\", \"Apple::5zkjq\"], \
{EntityProperty[\"Company\", \"Name\"], EntityProperty[\"Company\", \
\"Status\"], EntityProperty[\"Company\", \"Position\"], \
EntityProperty[\"Company\", \"CommonShares\"], EntityProperty[\"Company\", \
\"Website\"]}, \"PropertyAssociation\"]]"}, Typeset`open$$ = True, 
   Typeset`newq$$ = "apple"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{619., {2138., 15.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"fd55f8b3-f925-4282-9ed8-27f7fdd1a0cc"],

Cell[BoxData[
 TemplateBox[{"\"Apple\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Financial\"", ",", "\"NASDAQ:AAPL\""}], "]"}], 
   "\"Entity[\\\"Financial\\\", \\\"NASDAQ:AAPL\\\"]\"", 
   "\"financial entity\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8433836356353626`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"c9646336-9752-40b4-b825-bbae47e16c7f"]
}, Open  ]],

Cell["\<\
Sort this data structure, on decreasing order of their current assets.\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"4fb5842f-e652-427b-9b16-aeb20ada25d6"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["2",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 "\n",
 "Which",
 " ",
 "is",
 " ",
 "the",
 " ",
 "company",
 " ",
 "with",
 " ",
 "the",
 " ",
 "2nd",
 " ",
 "highest",
 " ",
 "current",
 " ",
 "assets",
 "? ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"22cd2cd0-b241-4dc5-b620-d37bf3768987"],

Cell["\<\
Make a BarChart to show the sorted list, displaying the current assets in \
billion $. Annotate the x-axis with the name of the company. \
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"1ea46ff6-47c5-4275-811b-d9fb6883f700"],

Cell["\<\
Make a PieChart of the current assets.  Add a ChartLegends with the company \
names, and ChartLabels with the share of each company in %.\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"837d981c-8664-4555-a17b-3adb2713db60"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["3",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "What",
 " ",
 "is",
 " ",
 "the",
 " ",
 "share",
 " ",
 "of",
 " ",
 "current",
 " ",
 "assets",
 " ",
 "of",
 " ",
 "Microsoft",
 "?  ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"d790a333-f09f-41ab-bc95-b71e6f282f23"],

Cell["\<\
Plot a GeoBubbleChart where each bubble is a company centered at its \
longitude/latitude, and the size of the bubble is the current assets of the \
company.\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"f7b70c42-44f9-4fe1-9838-1d26f7ea6f26"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["4",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "Where",
 " ",
 "are",
 " ",
 "located",
 " ",
 "the",
 " ",
 "companies",
 " ",
 "with",
 " ",
 "the",
 " ",
 "highest",
 " ",
 "current",
 " ",
 "assets",
 "?  ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"3313445d-cb7a-4006-8e1b-73e7af01f04a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data acquisition (or dealing with the Dirty-Dirty Data!)", "Section",ExpressionUUID->"ddc27bf6-8734-4242-aba9-5ba3809f3f07"],

Cell["\<\
Import the CSV dataset located at this address: \
\"https://storage.googleapis.com/mgt_492/ESG_index_companies.csv\"
Store it in a variable \"dataRaw\" and do not display the output.
Note: Import it as a dataset, with column keys corresponding to the first row.\
\>", "Text",
 CellFrame->2,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"9ccc6e3e-70ea-4c88-86fd-161ba73f7313"],

Cell["\<\
Preview the dataset. Display a RandomSample of 10 rows of your dataset \
\>", "Text",
 CellFrame->2,
 Background->RGBColor[
  0.8941176470588236, 0.8745098039215686, 
   0.8745098039215686],ExpressionUUID->"24ab92ca-20b3-4373-9866-1459d862f610"],

Cell["\<\
Extract the names of the columns (Keys) to understand what information is \
displayed in the dataset\
\>", "Text",
 CellFrame->2,
 Background->RGBColor[
  0.8941176470588236, 0.8745098039215686, 
   0.8745098039215686],ExpressionUUID->"37366ade-ef69-4731-a97e-92c28f06a63c"],

Cell["\<\
Drop the \"esg_binaire\", \"csr_com\", \"csr_report\" columns because they \
are not reliable.
Store all the remaining data in a variable \"dataReliable\" and do not \
display the output.\
\>", "Text",
 CellFrame->2,
 Background->RGBColor[
  0.8941176470588236, 0.8745098039215686, 
   0.8745098039215686],ExpressionUUID->"a6b7f3bf-026d-46cc-93af-d0ef1c607fee"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["5",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "How",
 " ",
 "many",
 " ",
 "columns",
 " ",
 "are",
 " ",
 "in",
 " ",
 "the",
 " ",
 "dataset",
 " ",
 "\"",
 "dataReliable",
 "\"?",
 " ",
 " ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"aaaf6ee8-e0ac-46b8-8628-df39a1980876"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["6",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "What",
 " ",
 "is",
 " ",
 "the",
 " ",
 "data",
 " ",
 "type",
 " ",
 "(",
 "String",
 ",",
 " ",
 "Real",
 ",",
 " ",
 "Integer",
 ",",
 " ",
 "etc",
 ".)",
 " ",
 " ",
 "of",
 " ",
 "the",
 " ",
 "first",
 " ",
 "observation",
 " ",
 "of",
 " ",
 "the",
 " ",
 "feature",
 " ",
 "\"",
 "ESG",
 " ",
 "controversy",
 " ",
 "score",
 "\"?",
 " ",
 "What",
 " ",
 "about",
 " ",
 "the",
 " ",
 "last",
 " ",
 "observation",
 "?  ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold],
 "\n",
 "How do you interpret this result?  "
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"5194ba01-bb20-4109-8e1d-7fb46b62668c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Cleaning (...or your worst nightmare)", "Section",ExpressionUUID->"24e11cea-1f4d-4cde-8578-2593f3f0c08b"],

Cell[TextData[{
 "Count",
 " ",
 "the",
 " ",
 "number",
 " ",
 "of",
 " ",
 "missing",
 " ",
 "values",
 " ",
 "in",
 " ",
 "each",
 " ",
 "column",
 ".",
 " ",
 "\n",
 "Note",
 " ",
 "that",
 " ",
 "there",
 " ",
 "are",
 " ",
 "two",
 " ",
 "types",
 " ",
 "of",
 " ",
 "missing",
 " ",
 "values",
 ":",
 " ",
 "\"\"",
 " ",
 "and",
 " ",
 "\"#",
 "DIV",
 "/",
 "0",
 "!\".",
 "\n",
 StyleBox["Hints",
  FontSlant->Italic],
 StyleBox[":",
  FontSlant->Italic],
 " ",
 "\n",
 " ",
 " ",
 " ",
 "-",
 " ",
 "One",
 " ",
 "option",
 " ",
 "is",
 " ",
 "to",
 " ",
 "map",
 " ",
 "over",
 " ",
 "a",
 " ",
 "list",
 " ",
 "of",
 " ",
 "the",
 " ",
 "Keys",
 ".",
 "\n",
 " ",
 " ",
 " ",
 "-",
 " ",
 "After",
 " ",
 "counting",
 " ",
 "the",
 " ",
 "number",
 " ",
 "of",
 " ",
 "missing",
 " ",
 "value",
 ",",
 " ",
 "you",
 " ",
 "can",
 " ",
 "create",
 " ",
 "an",
 " ",
 "association",
 " ",
 "between",
 " ",
 "a",
 " ",
 "list",
 " ",
 "of",
 " ",
 "keys",
 " ",
 "and",
 " ",
 "a",
 " ",
 "list",
 " ",
 "of",
 " ",
 "missing",
 " ",
 "values",
 " ",
 "to",
 " ",
 "help",
 " ",
 "future",
 " ",
 "operations",
 "."
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"39e6266c-de88-4466-87f8-9aa864ab6fdd"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["7",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "What",
 " ",
 "is",
 " ",
 "the",
 " ",
 "number",
 " ",
 "of",
 " ",
 "missing",
 " ",
 "values",
 " ",
 "in",
 " ",
 "the",
 " ",
 "column",
 " ",
 "\"",
 "Social",
 " ",
 "controvery",
 " ",
 "score",
 "\"?",
 " ",
 " ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"44f04df0-2364-49fb-ae5f-7fff1e395964"],

Cell[TextData[{
 "Find",
 " ",
 "the",
 " ",
 "four",
 " ",
 "columns",
 " ",
 "with",
 " ",
 "the",
 " ",
 "most",
 " ",
 "missing",
 " ",
 "values",
 " ",
 "and",
 " ",
 "drop",
 " ",
 "them",
 ".",
 "\n",
 "Store",
 " ",
 "the",
 " ",
 "new",
 " ",
 "dataset",
 " ",
 "in",
 " ",
 "a",
 " ",
 "variable",
 " ",
 "\"",
 "dataCleanCol",
 "\"",
 " ",
 "and",
 " ",
 "do",
 " ",
 "not",
 " ",
 "display",
 " ",
 "it",
 ".",
 "\n",
 StyleBox["Hint",
  FontSlant->Italic],
 StyleBox[":",
  FontSlant->Italic],
 " ",
 "You",
 " ",
 "should",
 " ",
 "expect",
 " ",
 "to",
 " ",
 "drop",
 " ",
 "the",
 " ",
 "following",
 " ",
 "columns",
 ":",
 " ",
 "\"",
 "Environment",
 " ",
 "controversy",
 " ",
 "score",
 "\",",
 " ",
 "\"",
 "Social",
 " ",
 "controvery",
 " ",
 "score",
 "\",",
 " ",
 "\"",
 "Score",
 " ",
 "-",
 " ",
 "Emission",
 " ",
 "Reduction",
 "/",
 "Spill",
 "/",
 "Pollution",
 " ",
 "Controversies",
 " ",
 "(",
 "Inactive",
 ")\",",
 " ",
 "\"",
 "Score",
 " ",
 "-",
 " ",
 "Product",
 " ",
 "Responsibility",
 "/",
 "Responsible",
 " ",
 "Mrktg",
 " ",
 "Controversy",
 "(",
 "Inactive",
 ")\""
}], "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"d2d6bb58-8cd7-4094-9da1-c06c2d0c87d4"],

Cell[TextData[{
 "Delete",
 " ",
 "all",
 " ",
 "the",
 " ",
 "rows",
 " ",
 "that",
 " ",
 "have",
 " ",
 "at",
 " ",
 "least",
 " ",
 "one",
 " ",
 "missing",
 " ",
 "value",
 ".",
 "\n",
 "Store",
 " ",
 "the",
 " ",
 "new",
 " ",
 "dataset",
 " ",
 "in",
 " ",
 "a",
 " ",
 "variable",
 " ",
 "\"",
 "dataClean",
 "\"",
 " ",
 "and",
 " ",
 "do",
 " ",
 "not",
 " ",
 "display",
 " ",
 "it",
 ".",
 "\n",
 StyleBox["Hint",
  FontSlant->Italic],
 StyleBox[":",
  FontSlant->Italic],
 StyleBox[" ",
  FontSlant->Italic],
 StyleBox["One",
  FontSlant->Plain],
 StyleBox[" ",
  FontSlant->Plain],
 StyleBox["option",
  FontSlant->Plain],
 StyleBox[" ",
  FontSlant->Plain],
 StyleBox["is",
  FontSlant->Plain],
 StyleBox[" ",
  FontSlant->Plain],
 StyleBox["to",
  FontSlant->Plain],
 StyleBox[" ",
  FontSlant->Plain],
 StyleBox["use",
  FontSlant->Plain],
 StyleBox[" ",
  FontSlant->Plain],
 StyleBox["Select",
  FontSlant->Plain],
 StyleBox[" ",
  FontSlant->Plain],
 StyleBox["and",
  FontSlant->Plain],
 StyleBox[" ",
  FontSlant->Plain],
 StyleBox["FreeQ",
  FontSlant->Plain]
}], "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"a2bc8a9a-3d67-4dc8-a7c4-2d447ec185b4"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["8",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "How",
 " ",
 "many",
 " ",
 "rows",
 " ",
 "does",
 " ",
 "the",
 " ",
 "dataset",
 " ",
 "have",
 " ",
 "after",
 " ",
 "dropping",
 " ",
 "those",
 " ",
 "rows",
 "?  ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"cc0e3496-bbe4-4c7a-89b1-4511cc047e4a"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["9",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "As",
 " ",
 "you",
 " ",
 "may",
 " ",
 "have",
 " ",
 "noted",
 ",",
 " ",
 "for",
 " ",
 "each",
 " ",
 "company",
 " ",
 "we",
 " ",
 "have",
 " ",
 "data",
 " ",
 "for",
 " ",
 "multiple",
 " ",
 "years",
 ".",
 " ",
 "For",
 " ",
 "which",
 " ",
 "year",
 " ",
 "do",
 " ",
 "we",
 " ",
 "have",
 " ",
 "more",
 " ",
 "data",
 " ",
 "points",
 " ",
 "lefts",
 "? How many companies are in this year?  ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"83e0d776-21f4-4588-8f61-6a240ab35ebc"],

Cell["\<\
From now on, we will use the subset of the dataset containing the companies \
data only for the year with the most number of observations:
- Keep only the data for the year with the most number of observations. 
- Store this dataset in a variable \"data\".
- Check the dimensions of your new dataset and generate a RandomSample of 10 \
observations.
- Clear the variables you are not using anymore\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"c02dc15e-1223-4a48-a07b-0d1d53f67082"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Visualization", "Section",ExpressionUUID->"b81e998e-4a73-49f0-b1d3-349b4e7bb079"],

Cell["\<\
If you could not perform the previous operations, you can answer the \
following questions by importing the CSV dataset \"data-esg.csv\" that is \
available in Git. Store it in a variable \"data\" and do not display the \
output. Import it as a dataset, with column keys corresponding to the first \
row.\
\>", "Text",
 CellFrame->2,
 CellFrameColor->RGBColor[0, 0, 0],
 FontSlant->Plain,
 Background->RGBColor[
  0.9019607843137255, 1, 
   1],ExpressionUUID->"889cb79e-6cf9-4fe5-be8c-bc7a0220c6cd"],

Cell["\<\
Plot a BoxWhiskerChart of the values in the following columns \"ESG \
controversy score\", \"Governance controversy score\", \"esg_score\"\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"63241272-b371-416c-bba2-b94f39918dd4"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["10",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "Which",
 " ",
 "between",
 " ",
 "the",
 " ",
 "\"",
 "ESG",
 " ",
 "controversy",
 " ",
 "score",
 "\",",
 " ",
 "\"",
 "Governance",
 " ",
 "controversy",
 " ",
 "score",
 "\",",
 " ",
 "\"",
 "esg_score",
 "\"",
 " ",
 "columns",
 " ",
 "has",
 " ",
 "the",
 " ",
 "highest",
 " ",
 "median",
 " ",
 "value",
 "?  ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"a7cd5b19-a7d0-45c9-ae2a-72905c295596"],

Cell["\<\
Normalize all the columns to have values between 0 and 1, except the \
following ones: \"Year\", \"Firm\", \"ind\", \"country\".
Store this dataset in a variable \"dataN\" and do not display the result.\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"ccd6de5f-37fa-4db3-ad0e-8f53b43dbd7a"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["11",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "What",
 " ",
 "is",
 " ",
 "the",
 " ",
 "normalized",
 " ",
 "value",
 " ",
 "for",
 " ",
 "the",
 " ",
 "\"",
 "ESG",
 " ",
 "controversy",
 " ",
 "score",
 "\"",
 " ",
 "for",
 " ",
 "the",
 " ",
 "firm",
 " ",
 "\"",
 "1",
 "&",
 "1",
 " ",
 "DRILLISCH",
 "\"",
 " ",
 "for",
 " ",
 "the",
 " ",
 "year",
 " ",
 "2017",
 "? (round to 2 decimals, e.g., 0.50)  ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"e1371f52-07b9-4371-a583-3103c90c8178"],

Cell["\<\
Compute the correlation matrix for the following score columns:
\"ESG controversy score\", 
\"Governance controversy score\",
\"Score - Emission Reduction/Biodiversity Controversies (Inactive)\", 
\"Score - Community/Critical Countries-Indigenous Controversy (Inactive)\",
\"Score - Community/Public Health Controversies (Inactive)\",
\"Score - Diversity and Opportunity/Diversity Controversies (Inactive)\"\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"90338f76-45be-46bd-9469-d40850542392"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["12",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "What",
 " ",
 "is",
 " ",
 "the",
 " ",
 "correlation",
 " ",
 "between",
 " ",
 "the",
 " ",
 "columns",
 " ",
 "\"",
 "ESG",
 " ",
 "controversy",
 " ",
 "score",
 "\"",
 " ",
 "and",
 " ",
 "\"",
 "Governance",
 " ",
 "controversy",
 " ",
 "score",
 "\"?",
 " ",
 "(",
 "round",
 " ",
 "to",
 " ",
 "2",
 " ",
 "decimals",
 ",",
 " ",
 "e",
 ".",
 "g",
 ".,",
 " ",
 "0",
 ".",
 "50",
 ")",
 " ",
 " ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"d3d1e157-8ee9-4ded-bf3d-030c8dc84a13"],

Cell["Generate a MatrixPlot of the correlation matrix", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"a540c875-056d-4452-b43e-a9970dd160d5"],

Cell["\<\
Plot a histogram of the \"assets\" column (non-normalized) in order to get an \
idea of the distribution of the amount of assets belonging to the companies \
in this dataset. To make the histogram more readable use a logarithmic scale \
on the y-axis (x-axis are the bins of asset values).\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"4f5f373e-bdcc-46ea-ba1c-5cbf0f05797c"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["13",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "What",
 " ",
 "does",
 " ",
 "the",
 " ",
 "shape",
 " ",
 "of",
 " ",
 "the",
 " ",
 "assets",
 " ",
 "values",
 " ",
 "histogram",
 " ",
 "(",
 "in",
 " ",
 "log",
 " ",
 "scale",
 ")",
 " ",
 "look",
 " ",
 "like",
 " ",
 "(",
 "from",
 " ",
 "left",
 " ",
 "to",
 " ",
 "right",
 ",",
 " ",
 "from",
 " ",
 "smaller",
 " ",
 "to",
 " ",
 "larger",
 " ",
 "values",
 ")?",
 " ",
 "Decreasing",
 ",",
 " ",
 "increasing",
 ",",
 " ",
 "almost",
 " ",
 "uniform",
 ",",
 " ",
 "very",
 " ",
 "irregular",
 "?  ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold]
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"ba9b77a4-a456-4b08-95df-cc8e9f3229b6"],

Cell["\<\
For each country, compute the number of companies and the average amount of \
market value (\"mv\" column) for the companies in the country.\
\>", "Text",
 CellFrame->2,
 FontSlant->Plain,
 Background->RGBColor[
  0.8941176470588236, 0.8941176470588236, 
   0.8941176470588236],ExpressionUUID->"7aec4dd3-2097-449b-9446-343918ca4edc"],

Cell[TextData[{
 StyleBox["Question",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["14",
  FontWeight->Bold],
 StyleBox[":",
  FontWeight->Bold],
 "\n",
 "How",
 " ",
 "many",
 " ",
 "companies",
 " ",
 "are",
 " ",
 "in",
 " ",
 "country",
 " ",
 "\"",
 "GB",
 "\"?",
 " ",
 " ",
 StyleBox["[",
  FontWeight->Bold],
 StyleBox["1",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["point",
  FontWeight->Bold],
 StyleBox["]",
  FontWeight->Bold],
 "\n",
 StyleBox["Hint",
  FontSlant->Italic],
 StyleBox[":",
  FontSlant->Italic],
 StyleBox[" ",
  FontSlant->Italic],
 "the",
 " ",
 "number",
 " ",
 "should",
 " ",
 "be",
 " ",
 "between",
 " ",
 "300",
 "-",
 "400"
}], "Text",
 CellFrame->2,
 Background->RGBColor[
  0.7490196078431373, 0.792156862745098, 
   0.9215686274509803],ExpressionUUID->"c21e9eb7-219f-4b7f-b723-9253965a0803"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 651.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5d886155-c8e3-4cbd-8393-ec48441cbb6a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 105, 0, 74, "Title",ExpressionUUID->"e243a98d-be8f-4892-8900-9d01b72390b7"],
Cell[688, 24, 129, 0, 39, "Subtitle",ExpressionUUID->"947f15c3-600c-4c56-8557-0329ea06c7f9"],
Cell[820, 26, 3202, 350, 191, "Text",ExpressionUUID->"eeb8073e-ee93-4cc1-b8ff-1f3a5a596e0a"],
Cell[CellGroupData[{
Cell[4047, 380, 103, 0, 50, "Section",ExpressionUUID->"949d99f6-bd54-4947-9317-7b9e2f8bd129"],
Cell[4153, 382, 595, 17, 151, "Text",ExpressionUUID->"7c240ddf-ef6b-45b8-9492-800a7e5124ee"],
Cell[4751, 401, 152, 3, 21, "Input",ExpressionUUID->"2148a40a-dd5f-4131-8db8-77dd1fbfecad"],
Cell[4906, 406, 1271, 29, 31, "Input",ExpressionUUID->"458e6f2a-f40c-410b-8991-ff6a797f42d4"],
Cell[6180, 437, 762, 44, 78, "Text",ExpressionUUID->"b61b6ee1-fed0-47f2-94af-1dea1409a87e"],
Cell[CellGroupData[{
Cell[6967, 485, 347477, 6308, 2166, "WolframAlphaShortInput",ExpressionUUID->"fd55f8b3-f925-4282-9ed8-27f7fdd1a0cc"],
Cell[354447, 6795, 365, 8, 34, "Output",ExpressionUUID->"c9646336-9752-40b4-b825-bbae47e16c7f"]
}, Open  ]],
Cell[354827, 6806, 273, 7, 42, "Text",ExpressionUUID->"4fb5842f-e652-427b-9b16-aeb20ada25d6"],
Cell[355103, 6815, 721, 46, 60, "Text",ExpressionUUID->"22cd2cd0-b241-4dc5-b620-d37bf3768987"],
Cell[355827, 6863, 340, 8, 42, "Text",ExpressionUUID->"1ea46ff6-47c5-4275-811b-d9fb6883f700"],
Cell[356170, 6873, 340, 8, 42, "Text",ExpressionUUID->"837d981c-8664-4555-a17b-3adb2713db60"],
Cell[356513, 6883, 668, 42, 60, "Text",ExpressionUUID->"d790a333-f09f-41ab-bc95-b71e6f282f23"],
Cell[357184, 6927, 360, 9, 42, "Text",ExpressionUUID->"f7b70c42-44f9-4fe1-9838-1d26f7ea6f26"],
Cell[357547, 6938, 693, 44, 60, "Text",ExpressionUUID->"3313445d-cb7a-4006-8e1b-73e7af01f04a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358277, 6987, 130, 0, 50, "Section",ExpressionUUID->"ddc27bf6-8734-4242-aba9-5ba3809f3f07"],
Cell[358410, 6989, 445, 9, 78, "Text",ExpressionUUID->"9ccc6e3e-70ea-4c88-86fd-161ba73f7313"],
Cell[358858, 7000, 255, 6, 42, "Text",ExpressionUUID->"24ab92ca-20b3-4373-9866-1459d862f610"],
Cell[359116, 7008, 284, 7, 42, "Text",ExpressionUUID->"37366ade-ef69-4731-a97e-92c28f06a63c"],
Cell[359403, 7017, 371, 9, 60, "Text",ExpressionUUID->"a6b7f3bf-026d-46cc-93af-d0ef1c607fee"],
Cell[359777, 7028, 677, 43, 60, "Text",ExpressionUUID->"aaaf6ee8-e0ac-46b8-8628-df39a1980876"],
Cell[360457, 7073, 1008, 82, 78, "Text",ExpressionUUID->"5194ba01-bb20-4109-8e1d-7fb46b62668c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361502, 7160, 116, 0, 50, "Section",ExpressionUUID->"24e11cea-1f4d-4cde-8578-2593f3f0c08b"],
Cell[361621, 7162, 1296, 148, 115, "Text",ExpressionUUID->"39e6266c-de88-4466-87f8-9aa864ab6fdd"],
Cell[362920, 7312, 753, 53, 60, "Text",ExpressionUUID->"44f04df0-2364-49fb-ae5f-7fff1e395964"],
Cell[363676, 7367, 1307, 134, 97, "Text",ExpressionUUID->"d2d6bb58-8cd7-4094-9da1-c06c2d0c87d4"],
Cell[364986, 7503, 1274, 94, 78, "Text",ExpressionUUID->"a2bc8a9a-3d67-4dc8-a7c4-2d447ec185b4"],
Cell[366263, 7599, 701, 46, 60, "Text",ExpressionUUID->"cc0e3496-bbe4-4c7a-89b1-4511cc047e4a"],
Cell[366967, 7647, 938, 74, 60, "Text",ExpressionUUID->"83e0d776-21f4-4588-8f61-6a240ab35ebc"],
Cell[367908, 7723, 600, 13, 115, "Text",ExpressionUUID->"c02dc15e-1223-4a48-a07b-0d1d53f67082"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368545, 7741, 92, 0, 50, "Section",ExpressionUUID->"b81e998e-4a73-49f0-b1d3-349b4e7bb079"],
Cell[368640, 7743, 509, 12, 60, "Text",ExpressionUUID->"889cb79e-6cf9-4fe5-be8c-bc7a0220c6cd"],
Cell[369152, 7757, 341, 8, 42, "Text",ExpressionUUID->"63241272-b371-416c-bba2-b94f39918dd4"],
Cell[369496, 7767, 850, 62, 60, "Text",ExpressionUUID->"a7cd5b19-a7d0-45c9-ae2a-72905c295596"],
Cell[370349, 7831, 405, 9, 60, "Text",ExpressionUUID->"ccd6de5f-37fa-4db3-ad0e-8f53b43dbd7a"],
Cell[370757, 7842, 896, 68, 60, "Text",ExpressionUUID->"e1371f52-07b9-4371-a583-3103c90c8178"],
Cell[371656, 7912, 610, 13, 151, "Text",ExpressionUUID->"90338f76-45be-46bd-9469-d40850542392"],
Cell[372269, 7927, 936, 77, 60, "Text",ExpressionUUID->"d3d1e157-8ee9-4ded-bf3d-030c8dc84a13"],
Cell[373208, 8006, 242, 5, 42, "Text",ExpressionUUID->"a540c875-056d-4452-b43e-a9970dd160d5"],
Cell[373453, 8013, 492, 10, 60, "Text",ExpressionUUID->"4f5f373e-bdcc-46ea-ba1c-5cbf0f05797c"],
Cell[373948, 8025, 1044, 90, 60, "Text",ExpressionUUID->"ba9b77a4-a456-4b08-95df-cc8e9f3229b6"],
Cell[374995, 8117, 343, 8, 42, "Text",ExpressionUUID->"7aec4dd3-2097-449b-9446-343918ca4edc"],
Cell[375341, 8127, 878, 61, 78, "Text",ExpressionUUID->"c21e9eb7-219f-4b7f-b723-9253965a0803"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

